// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FundsRecieved extends ethereum.Event {
  get params(): FundsRecieved__Params {
    return new FundsRecieved__Params(this);
  }
}

export class FundsRecieved__Params {
  _event: FundsRecieved;

  constructor(event: FundsRecieved) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProposalApproved extends ethereum.Event {
  get params(): ProposalApproved__Params {
    return new ProposalApproved__Params(this);
  }
}

export class ProposalApproved__Params {
  _event: ProposalApproved;

  constructor(event: ProposalApproved) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get donationAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get donationAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get donationReason(): string {
    return this._event.parameters[3].value.toString();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get donationAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProposalRejected extends ethereum.Event {
  get params(): ProposalRejected__Params {
    return new ProposalRejected__Params(this);
  }
}

export class ProposalRejected__Params {
  _event: ProposalRejected;

  constructor(event: ProposalRejected) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get donationAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ProposalVoted extends ethereum.Event {
  get params(): ProposalVoted__Params {
    return new ProposalVoted__Params(this);
  }
}

export class ProposalVoted__Params {
  _event: ProposalVoted;

  constructor(event: ProposalVoted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vote(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Donator__checkUpkeepResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getUpkeepNeeded(): boolean {
    return this.value0;
  }

  getValue1(): Bytes {
    return this.value1;
  }
}

export class Donator__getProposalResult {
  value0: Address;
  value1: string;
  value2: BigInt;

  constructor(value0: Address, value1: string, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  get_donationAddress(): Address {
    return this.value0;
  }

  getDonationReason(): string {
    return this.value1;
  }

  get_amount(): BigInt {
    return this.value2;
  }
}

export class Donator__getProposalVotesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  get_yesVotes(): BigInt {
    return this.value0;
  }

  get_noVotes(): BigInt {
    return this.value1;
  }
}

export class Donator extends ethereum.SmartContract {
  static bind(address: Address): Donator {
    return new Donator("Donator", address);
  }

  NFTAddress(): Address {
    let result = super.call("NFTAddress", "NFTAddress():(address)", []);

    return result[0].toAddress();
  }

  try_NFTAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("NFTAddress", "NFTAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  checkUpkeep(param0: Bytes): Donator__checkUpkeepResult {
    let result = super.call("checkUpkeep", "checkUpkeep(bytes):(bool,bytes)", [
      ethereum.Value.fromBytes(param0)
    ]);

    return new Donator__checkUpkeepResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_checkUpkeep(
    param0: Bytes
  ): ethereum.CallResult<Donator__checkUpkeepResult> {
    let result = super.tryCall(
      "checkUpkeep",
      "checkUpkeep(bytes):(bool,bytes)",
      [ethereum.Value.fromBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Donator__checkUpkeepResult(value[0].toBoolean(), value[1].toBytes())
    );
  }

  getProposal(_proposalId: BigInt): Donator__getProposalResult {
    let result = super.call(
      "getProposal",
      "getProposal(uint256):(address,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)]
    );

    return new Donator__getProposalResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBigInt()
    );
  }

  try_getProposal(
    _proposalId: BigInt
  ): ethereum.CallResult<Donator__getProposalResult> {
    let result = super.tryCall(
      "getProposal",
      "getProposal(uint256):(address,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Donator__getProposalResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBigInt()
      )
    );
  }

  getProposalCount(): BigInt {
    let result = super.call(
      "getProposalCount",
      "getProposalCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getProposalCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProposalCount",
      "getProposalCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProposalStatus(_proposalId: BigInt): BigInt {
    let result = super.call(
      "getProposalStatus",
      "getProposalStatus(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)]
    );

    return result[0].toBigInt();
  }

  try_getProposalStatus(_proposalId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProposalStatus",
      "getProposalStatus(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProposalVotes(_proposalId: BigInt): Donator__getProposalVotesResult {
    let result = super.call(
      "getProposalVotes",
      "getProposalVotes(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)]
    );

    return new Donator__getProposalVotesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getProposalVotes(
    _proposalId: BigInt
  ): ethereum.CallResult<Donator__getProposalVotesResult> {
    let result = super.tryCall(
      "getProposalVotes",
      "getProposalVotes(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Donator__getProposalVotesResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _NFTAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class CheckUpkeepCall extends ethereum.Call {
  get inputs(): CheckUpkeepCall__Inputs {
    return new CheckUpkeepCall__Inputs(this);
  }

  get outputs(): CheckUpkeepCall__Outputs {
    return new CheckUpkeepCall__Outputs(this);
  }
}

export class CheckUpkeepCall__Inputs {
  _call: CheckUpkeepCall;

  constructor(call: CheckUpkeepCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CheckUpkeepCall__Outputs {
  _call: CheckUpkeepCall;

  constructor(call: CheckUpkeepCall) {
    this._call = call;
  }

  get upkeepNeeded(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }

  get value1(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }
}

export class FundTheSmartContractInWEICall extends ethereum.Call {
  get inputs(): FundTheSmartContractInWEICall__Inputs {
    return new FundTheSmartContractInWEICall__Inputs(this);
  }

  get outputs(): FundTheSmartContractInWEICall__Outputs {
    return new FundTheSmartContractInWEICall__Outputs(this);
  }
}

export class FundTheSmartContractInWEICall__Inputs {
  _call: FundTheSmartContractInWEICall;

  constructor(call: FundTheSmartContractInWEICall) {
    this._call = call;
  }
}

export class FundTheSmartContractInWEICall__Outputs {
  _call: FundTheSmartContractInWEICall;

  constructor(call: FundTheSmartContractInWEICall) {
    this._call = call;
  }
}

export class GetProposalStatusCall extends ethereum.Call {
  get inputs(): GetProposalStatusCall__Inputs {
    return new GetProposalStatusCall__Inputs(this);
  }

  get outputs(): GetProposalStatusCall__Outputs {
    return new GetProposalStatusCall__Outputs(this);
  }
}

export class GetProposalStatusCall__Inputs {
  _call: GetProposalStatusCall;

  constructor(call: GetProposalStatusCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class GetProposalStatusCall__Outputs {
  _call: GetProposalStatusCall;

  constructor(call: GetProposalStatusCall) {
    this._call = call;
  }

  get _status(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class ProposeDonationCall extends ethereum.Call {
  get inputs(): ProposeDonationCall__Inputs {
    return new ProposeDonationCall__Inputs(this);
  }

  get outputs(): ProposeDonationCall__Outputs {
    return new ProposeDonationCall__Outputs(this);
  }
}

export class ProposeDonationCall__Inputs {
  _call: ProposeDonationCall;

  constructor(call: ProposeDonationCall) {
    this._call = call;
  }

  get _donationAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get donationReason(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ProposeDonationCall__Outputs {
  _call: ProposeDonationCall;

  constructor(call: ProposeDonationCall) {
    this._call = call;
  }
}

export class VoteForProposalCall extends ethereum.Call {
  get inputs(): VoteForProposalCall__Inputs {
    return new VoteForProposalCall__Inputs(this);
  }

  get outputs(): VoteForProposalCall__Outputs {
    return new VoteForProposalCall__Outputs(this);
  }
}

export class VoteForProposalCall__Inputs {
  _call: VoteForProposalCall;

  constructor(call: VoteForProposalCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _vote(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class VoteForProposalCall__Outputs {
  _call: VoteForProposalCall;

  constructor(call: VoteForProposalCall) {
    this._call = call;
  }
}
